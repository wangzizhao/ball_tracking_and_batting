/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

package lcmtypes;
 
import java.io.*;
import java.util.*;
import lcm.lcm.*;
 
public final class dynamixel_config_t implements lcm.lcm.LCMEncodable
{
    public long utime;
    public byte kp;
    public byte ki;
    public byte kd;
    public byte compl_margin;
    public byte compl_slope;
    public byte LED;
 
    public dynamixel_config_t()
    {
    }
 
    public static final long LCM_FINGERPRINT;
    public static final long LCM_FINGERPRINT_BASE = 0xada7ef2e53ffd2a2L;
 
    static {
        LCM_FINGERPRINT = _hashRecursive(new ArrayList<Class<?>>());
    }
 
    public static long _hashRecursive(ArrayList<Class<?>> classes)
    {
        if (classes.contains(lcmtypes.dynamixel_config_t.class))
            return 0L;
 
        classes.add(lcmtypes.dynamixel_config_t.class);
        long hash = LCM_FINGERPRINT_BASE
            ;
        classes.remove(classes.size() - 1);
        return (hash<<1) + ((hash>>63)&1);
    }
 
    public void encode(DataOutput outs) throws IOException
    {
        outs.writeLong(LCM_FINGERPRINT);
        _encodeRecursive(outs);
    }
 
    public void _encodeRecursive(DataOutput outs) throws IOException
    {
        outs.writeLong(this.utime); 
 
        outs.writeByte(this.kp); 
 
        outs.writeByte(this.ki); 
 
        outs.writeByte(this.kd); 
 
        outs.writeByte(this.compl_margin); 
 
        outs.writeByte(this.compl_slope); 
 
        outs.writeByte(this.LED); 
 
    }
 
    public dynamixel_config_t(byte[] data) throws IOException
    {
        this(new LCMDataInputStream(data));
    }
 
    public dynamixel_config_t(DataInput ins) throws IOException
    {
        if (ins.readLong() != LCM_FINGERPRINT)
            throw new IOException("LCM Decode error: bad fingerprint");
 
        _decodeRecursive(ins);
    }
 
    public static lcmtypes.dynamixel_config_t _decodeRecursiveFactory(DataInput ins) throws IOException
    {
        lcmtypes.dynamixel_config_t o = new lcmtypes.dynamixel_config_t();
        o._decodeRecursive(ins);
        return o;
    }
 
    public void _decodeRecursive(DataInput ins) throws IOException
    {
        this.utime = ins.readLong();
 
        this.kp = ins.readByte();
 
        this.ki = ins.readByte();
 
        this.kd = ins.readByte();
 
        this.compl_margin = ins.readByte();
 
        this.compl_slope = ins.readByte();
 
        this.LED = ins.readByte();
 
    }
 
    public lcmtypes.dynamixel_config_t copy()
    {
        lcmtypes.dynamixel_config_t outobj = new lcmtypes.dynamixel_config_t();
        outobj.utime = this.utime;
 
        outobj.kp = this.kp;
 
        outobj.ki = this.ki;
 
        outobj.kd = this.kd;
 
        outobj.compl_margin = this.compl_margin;
 
        outobj.compl_slope = this.compl_slope;
 
        outobj.LED = this.LED;
 
        return outobj;
    }
 
}

